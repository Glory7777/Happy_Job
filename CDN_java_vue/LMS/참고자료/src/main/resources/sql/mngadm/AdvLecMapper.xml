<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.happyjob.study.mngadm.dao.AdviceLecDao">
   
   	<!-- 강의 상담 목록 -->
	<select id="lectureAdviceList" resultType="kr.happyjob.study.mngadm.model.AdviceLecModel">
			SELECT le.lec_cd,
			       le.lec_nm, 
			       le.loginID AS ins_id, 
			       le.lec_start_date,
			       le.lec_end_date,
			       ui.name AS ins_nm
			FROM tb_lec le
			INNER JOIN tb_userinfo ui ON le.loginID = ui.loginID
			WHERE le.lec_yn = 'N'
		 <if test="(searchText != null) and (!searchText.equals(''))">
				<choose>
					<when test="searchSel eq 'lectureName'.toString()">
						WHERE le.lec_nm Like CONCAT('%', #{searchText}, '%')
					</when>
				
					<otherwise>
						WHERE (
						     le.lec_nm Like CONCAT('%', #{searchText}, '%')
						      )
					</otherwise>
				</choose>
		 </if>
 	  	 order by le.lec_cd ASC
		 LIMIT #{startpoint}, #{pageSize}
	</select>
	
	
	 <!-- 강의  상담 목록 개수 조회 -->
	<select id="totalcnt" resultType="int">
		select COUNT(le.lec_cd) AS tot_cnt 
			FROM tb_lec le
			INNER JOIN tb_userinfo ui on le.loginID = ui.loginID
		 <if test="(searchText != null) and (!searchText.equals(''))">
				<choose>
					<when test="searchSel eq 'lectureName'.toString()">
						WHERE le.lec_nm Like CONCAT('%', #{searchText}, '%')
					</when>
				
					<otherwise>
						WHERE (
						     le.lec_nm Like CONCAT('%', #{searchText}, '%')
						      )
					</otherwise>
				</choose>
		 </if>
	</select>
	
	
	<!-- 상담 학생 목록 조회  -->
	<select id="advStuList" resultType="kr.happyjob.study.mngadm.model.AdvStuListModel">
			SELECT al.lec_cd
			     , con.cst_no
			     , al.loginID as std_id
			     , (
			          SELECT name
			          FROM tb_app_list al_sub
			          LEFT JOIN tb_lec le_sub ON al_sub.lec_cd = le_sub.lec_cd
			          LEFT JOIN tb_consulting con_sub ON con_sub.loginID = al_sub.loginID
			          LEFT JOIN tb_userinfo ui_sub ON al_sub.loginID = ui_sub.loginID
			          WHERE al_sub.app_yn = 'Y'
			          AND al_sub.loginID = al.loginID
			     ) as std_nm
			     , con.cst_date
			     , le.loginID as ins_id
			     , ui.name as ins_nm
			     , le.lec_nm
			FROM tb_app_list al
			LEFT JOIN tb_lec le ON al.lec_cd = le.lec_cd
			LEFT JOIN tb_consulting con ON con.loginID = al.loginID
			LEFT JOIN tb_userinfo ui ON le.loginID = ui.loginID;
			AND  le.loginID = #{ins_id}
			AND	 al.loginID = #{std_id}
		
	</select>
	
	<!-- 상세페이지 갯수 세기  -->
	<select id="advTotalcnt" resultType="int">
	
	select COUNT(al.lec_cd) AS advTotalcnt 
			FROM tb_app_list al
      		LEFT JOIN tb_lec le ON al.lec_cd = le.lec_cd
   	
   	WHERE lec_cd = ${lec_cd} 

	</select>
	
	
	<!-- 상담 등록 (저장)
	<insert id="insertAdv">
		<selectKey resultType="string" keyProperty="cst_no" order="BEFORE">
		    select cast((IFNULL(max(cast(cst_no as unsigned)), 0) + 1) as char(20)) 
		    from tb_consulting
		</selectKey>

		INSERT INTO tb_consulting (
			lec_cd
		  , cst_no
		  , loginID
		  , score
		  , cst_date
		  , cls_room
		  , cst_ctt
		  , cst_update_date
		  , cst_yn
		  , cst_delete_yn
		) values(
			  #{lec_cd}
			, #{cst_no}
			, #{std_id}
			, #{score}
			, #{cst_date}
			, #{cls_room}
			, #{cst_ctt}
			, #{cst_update_date}
			, "Y"
			, "N"
		)
		 
	</insert> 
	 -->
	
	<!-- 상담 수정 
	<update id="updateAdv">
		
		UPDATE tb_consulting 
		   SET 
		  	   score = #{score}
		  	 , cst_date = #{cst_date}
		     , cls_room = #{cls_room}
		     , cst_ctt = #{cst_ctt}
		     , cst_update_date = DATE_FORMAT(now(), '%Y-%m-%d')
		     , cst_yn = "Y"
		     , cst_delete_yn = "N"
		 where cst_no = #{cst_no}
	</update>
	-->
	
	<!-- 상담 삭제 
	<delete id="deleteAdv">
		
		DELETE 
		  FROM tb_consulting 
		 WHERE cst_no = #{cst_no};
	</delete>
	 -->
	
</mapper>
 