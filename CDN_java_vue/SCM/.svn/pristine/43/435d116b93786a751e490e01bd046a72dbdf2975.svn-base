<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.happyjob.study.scm.dao.RefundListDao">

	<!-- 반품신청 목록 조회 -->
	<select id="refundList" resultType="kr.happyjob.study.scm.model.RefundListModel">
		/*kr.happyjob.study.scm.dao.refundList*/
		select ref.refund_cd
				, ref.order_cd
				, ref.pro_cd
				, ref.refund_cnt
				, ref.refund_price
				, ref.refund_date
				, ref.refund_st
				, ref.refund_text
				, pro.pro_mfc
				, pro.pro_nm
				, pro.pro_model_nm
				, ord.order_cnt
		from tb_refund ref
			inner join tb_product pro on (ref.pro_cd = pro.pro_cd)
			inner join tb_order ord on(ref.pro_cd = ord.pro_cd and ref.order_cd = ord.order_cd)
		<where>
			<if test="(!searchStartDate.equals('')) and (!searchEndDate.equals(''))">
				and ref.refund_date between #{searchStartDate} and #{searchEndDate}
			</if>
			<if test="(!searchStartDate.equals('')) and (searchEndDate.equals(''))">
				and ref.refund_date >= #{searchStartDate}
			</if>
			<if test="(searchStartDate.equals('')) and (!searchEndDate.equals(''))">
				and ref.refund_date <![CDATA[<=]]> #{searchEndDate}
			</if>
			
			<if test="(searchText != null) and (!searchText.equals(''))">
				<choose>
					<when test="searchSel eq 'refundCd'.toString()">
						and ref.refund_cd like CONCAT('%', #{searchText}, '%')
					</when>
					<when test="searchSel eq 'proMfc'.toString()">
						and pro.pro_mfc like CONCAT('%', #{searchText}, '%')
					</when>
					<when test="searchSel eq 'proNm'.toString()">
						and pro.pro_nm like CONCAT('%', #{searchText}, '%')
					</when>
					<otherwise>
						and (
								ref.refund_cd like CONCAT('%', #{searchText}, '%')
						         or pro.pro_mfc like CONCAT('%', #{searchText}, '%')
						         or pro.pro_nm like CONCAT('%', #{searchText}, '%')
							)
					</otherwise>
				</choose>
			</if>
		</where>
		order by CAST(ref.refund_cd AS SIGNED) desc
		LIMIT #{startPoint}, #{pageSize}
	</select>
	
	<!-- 목록 전체 갯수 조회 -->
	<select id="totalRefund" resultType="int">
		/*kr.happyjob.study.scm.dao.totalRefund*/
		select count(ref.refund_cd)
		from tb_refund ref
			inner join tb_product pro on (ref.pro_cd = pro.pro_cd)
			inner join tb_order ord on(ref.pro_cd = ord.pro_cd and ref.order_cd = ord.order_cd)
		<where>
			<if test="(!searchStartDate.equals('')) and (!searchEndDate.equals(''))">
				and ref.refund_date between #{searchStartDate} and #{searchEndDate}
			</if>
			<if test="(!searchStartDate.equals('')) and (searchEndDate.equals(''))">
				and ref.refund_date >= #{searchStartDate}
			</if>
			<if test="(searchStartDate.equals('')) and (!searchEndDate.equals(''))">
				and ref.refund_date <![CDATA[<=]]> #{searchEndDate}
			</if>
			
			<if test="(searchText != null) and (!searchText.equals(''))">
				<choose>
					<when test="searchSel eq 'refundCd'.toString()">
						and ref.refund_cd like CONCAT('%', #{searchText}, '%')
					</when>
					<when test="searchSel eq 'proMfc'.toString()">
						and pro.pro_mfc like CONCAT('%', #{searchText}, '%')
					</when>
					<when test="searchSel eq 'proNm'.toString()">
						and pro.pro_nm like CONCAT('%', #{searchText}, '%')
					</when>
					<otherwise>
						and (
								ref.refund_cd like CONCAT('%', #{searchText}, '%')
						         or pro.pro_mfc like CONCAT('%', #{searchText}, '%')
						         or pro.pro_nm like CONCAT('%', #{searchText}, '%')
							)
					</otherwise>
				</choose>
			</if>
		</where>
	</select>
	
	<!-- 반품 승인 요청 -->
	<insert id="refundDirection">
		 <selectKey resultType="string" keyProperty="direc_cd" order="BEFORE">
              select cast((ifnull(max(cast(direc_cd as unsigned)) ,0) + 1) as char(20)) 
               from tb_direction
        </selectKey>
        insert into tb_direction
        			(
        				direc_cd
        				, direc_date
        				, direc_type
        				, direc_note
        				, loginid
        				, refund_cd
        				, order_cd
        			) values (
        				#{direc_cd}
        				, DATE_FORMAT(now(), '%Y-%m-%d')
        				, 2
        				, #{direcNote}
        				, #{loginId}
        				, #{refundCd}
        				, #{orderCd}
        			)
	</insert>
	
	<!-- 승인 요청 완료한 반품 신청 목록 -->
	<select id="refundDirectionList" resultType="kr.happyjob.study.scm.model.RefundDirectionModel">
		/*kr.happyjob.study.scm.dao.refundDirectionList*/
		select refund_cd
		from tb_direction
		where direc_type = 2
	</select>
	
</mapper>