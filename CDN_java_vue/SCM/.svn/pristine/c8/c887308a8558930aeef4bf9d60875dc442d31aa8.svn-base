package kr.happyjob.study.exe.controller;

import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.log4j.LogManager;
import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.happyjob.study.exe.model.PieChartData;
import kr.happyjob.study.exe.model.ProductModel;
import kr.happyjob.study.exe.model.SalesDetailModel;
import kr.happyjob.study.exe.service.ProductStatService;

@Controller
@RequestMapping("/exe/")
public class ProductStatController {
	
	@Autowired
	ProductStatService service;
	
	// Set logger
	private final Logger logger = LogManager.getLogger(this.getClass());

	// Get class name for logger
	private final String className = this.getClass().toString();
	
	
	
	/**
	 * 제품판매현황 조회페이지
	 */
	@RequestMapping("productStat.do")
	public String productStat(Model model, @RequestParam Map<String, Object> paramMap, HttpServletRequest request,
			HttpServletResponse response, HttpSession session) throws Exception {
		
		logger.info("+ Start " + className + ".productStat");
		logger.info("   - paramMap : " + paramMap);
		logger.info("+ End " + className + ".productStat");
		
		return "exe/productStatMgr";
	}
	

	/**
	 * 상품 리스트
	 */
	@RequestMapping("productList.do")
	public String productList(Model model, @RequestParam Map<String, Object> paramMap, HttpServletRequest request,
			HttpServletResponse response, HttpSession session) throws Exception {
		
		logger.info("+ Start " + className + ".productList");
		logger.info("   - paramMap : " + paramMap);
	
		int pageSize = Integer.parseInt((String) paramMap.get("pageSize"));   
		int currentPage = Integer.parseInt((String) paramMap.get("currentPage"));   
		int startpoint = ( currentPage - 1 ) * pageSize;

		paramMap.put("pageSize", pageSize);
		paramMap.put("startpoint", startpoint);
		
		List<ProductModel> productList = service.productList(paramMap);
		int totalCnt = service.productTotal(paramMap);
		
		model.addAttribute("productList",productList);
		model.addAttribute("totalCnt",totalCnt);
		
		
		logger.info("+ End " + className + ".productList");
		
		return "exe/exeProductList";
	}
	

	/**
	 * 상품 리스트
	 */
	@RequestMapping("productPieChart.do")
	@ResponseBody
	public List<PieChartData> chartData(Model model, @RequestParam Map<String, Object> paramMap, HttpServletRequest request,
			HttpServletResponse response, HttpSession session) throws Exception {
		
		logger.info("+ Start " + className + ".chartData");
		logger.info("   - paramMap : " + paramMap);

		List<PieChartData> PieChartData = service.productPieChart(paramMap);
		
		logger.info("+ End " + className + ".chartData");

		return PieChartData;
		
	}
	

	/**
	 * 상품별 매출 상세
	 */
	@RequestMapping("psDetail.do")
	public String psDetail(Model model, @RequestParam Map<String, Object> paramMap, HttpServletRequest request,
			HttpServletResponse response, HttpSession session) throws Exception {
		
		logger.info("+ Start " + className + ".psDetail");
		logger.info("   - paramMap : " + paramMap);
	
		int pageSize = Integer.parseInt((String) paramMap.get("pageSize"));   
		int currentPage = Integer.parseInt((String) paramMap.get("currentPage"));   
		int startpoint = ( currentPage - 1 ) * pageSize;

		paramMap.put("pageSize", pageSize);
		paramMap.put("startpoint", startpoint);
		
		List<SalesDetailModel> dtList = service.dtList(paramMap);
		int dtTotalCnt = service.dtTotal(paramMap);
		
		model.addAttribute("dtList",dtList);
		model.addAttribute("dtTotalCnt",dtTotalCnt);
		
		
		logger.info("+ End " + className + ".psDetail");
		
		return "exe/salesDetailList";
	}
	


}
