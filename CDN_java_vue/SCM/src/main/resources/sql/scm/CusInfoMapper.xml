<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.happyjob.study.scm.dao.CusInfoDao">

	<!-- 내부직원 목록 조회 -->
	<select id="cusInfoList" resultType="kr.happyjob.study.scm.model.CusInfoModel">
		/*kr.happyjob.study.scm.dao.cusInfoList*/
		select user.loginid
		, user.name
		, user.password
		, user.user_hp
		, user.user_email
		, user.reg_date
		, user.addr
		, user.addr_dt
		, user.zip_cd
		, user.account_num
		, user.bank_cd
		, dc.detail_name as user_type
		, do.detail_name as user_yn
		from tb_userinfo user
		inner join tb_detail_code dc on dc.detail_code = user.user_type and
		dc.group_code like 'userCD' and dc.detail_code like 'C'
		inner join tb_detail_code do on do.detail_code = user.user_yn and
		do.group_code like 'deleteCD'
		<where>
			<if test="(searchDel != null) and (!searchDel.equals(''))">
				and user_yn = #{searchDel}
			</if>

			<if test="(searchtext != null) and (!searchtext.equals(''))">
				and user.name Like CONCAT('%', #{searchtext}, '%')
			</if>
		</where>
		order by user.name
		LIMIT #{startpoint}, #{pageSize}
	</select>

	<!-- 내부직원 카운트 조회 -->
	<select id="cusInfoTotalCnt" resultType="int">
		/*kr.happyjob.study.scm.dao.cusInfoTotalCnt*/
		select
		COUNT(user.loginid) AS tot_cnt
		from tb_userinfo user
		where user_type like 'C'
	</select>

	<!-- 내부직원 한건 조회 -->
	<select id="cusInfoSelect" resultType="kr.happyjob.study.scm.model.CusInfoModel">
		/*kr.happyjob.study.scm.dao.cusInfoSelect*/
		select user.loginid
		, user.name
		, user.password
		, user.user_hp
		, user.user_email
		, user.reg_date
		, user.addr
		, user.addr_dt
		, user.zip_cd
		, user.account_num
		, user.bank_cd
		, dc.detail_name as user_type
		, user.user_yn
		from tb_userinfo user
		inner join tb_detail_code dc on dc.detail_code = user.user_type and
		dc.group_code like 'userCD'
		where user.loginid = #{loginid}
	</select>

	<!-- 내부직원 신규 등록 -->
	<insert id="insertCusInfo">
		insert into tb_userinfo
		( loginid
		, name
		, password
		, user_hp
		, user_email
		, reg_date
		, addr
		, addr_dt
		, zip_cd
		, account_num
		, bank_cd
		, user_type
		, user_yn
		) values(
		#{loginid}
		, #{name}
		, #{password}
		, #{user_hp}
		, #{user_email}
		, DATE_FORMAT(now(), '%Y-%m-%d')
		, #{addr}
		, #{addr_dt}
		, #{zip_cd}
		, #{account_num}
		, #{bank_cd}
		, 'C'
		, '0'
		)
	</insert>

	<!-- 내부직원 정보 수정 -->
	<update id="updateCusInfo">
		update tb_userinfo user
		set
		user.loginid = #{loginid}
		, user.name = #{name}
		, user.password = #{password}
		, user.user_hp = #{user_hp}
		, user.user_email = #{user_email}
		, user.addr = #{addr}
		, user.addr_dt = #{addr_dt}
		, user.zip_cd = #{zip_cd}
		, user.account_num = #{account_num}
		, user.bank_cd = #{bank_cd}
		, user.user_type = 'C'
		where loginid = #{loginid}
	</update>

	<!-- 내부직원 삭제 -->
	<update id="deleteCusInfo">
		update tb_userinfo
		set user_yn = '1'
		where loginid = #{loginid}
	</update>

</mapper>